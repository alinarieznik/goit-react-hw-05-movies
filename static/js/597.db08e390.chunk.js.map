{"version":3,"file":"static/js/597.db08e390.chunk.js","mappings":"2OA4DA,UAtDkB,WAChB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAGQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRC,EAAaH,EACd,GAAE,CAACA,IAEJ,IAAMG,EAAY,mCAAG,WAAMH,GAAN,uFAEjBH,GAAW,GAFM,UAGEO,EAAAA,EAAAA,IAAeJ,GAHjB,OAGXN,EAHW,OAIjBC,EAAQD,GAJS,gDAMjBK,EAAS,EAAD,IANS,yBAQjBF,GAAW,GARM,4EAAH,sDAYlB,OACE,0BACE,+BACGC,IAAUF,IAAW,uBAAG,qBACxBA,IAAW,SAAC,IAAD,IACXF,EAAKW,OAAS,IACb,wBACGX,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACR,2BACE,gBACEC,IACED,EAAY,0CAC2BA,GACnCE,EAENC,IAAKJ,KAEP,4BACE,uBAAIA,KACJ,yBAAG,cAAYD,UAXVD,EADD,UAqBrB,C,+LCxDKO,EAAU,mCAEHC,EAAmB,mCAAG,6GAEZC,EAAAA,EAAAA,IAAA,kEAC0CF,EAD1C,oBAFY,cAEzBG,EAFyB,yBAMxBA,EAAKC,KAAKC,SANc,gCAQ/BC,QAAQC,IAAR,MAR+B,yDAAH,qDAYnBC,EAAiB,mCAAG,WAAMf,GAAN,gGAEVS,EAAAA,EAAAA,IAAA,6CACqBT,EADrB,oBACmCO,EADnC,oBAFU,cAEvBG,EAFuB,yBAMtBA,EAAKC,MANiB,gCAQ7BE,QAAQC,IAAR,MAR6B,yDAAH,sDAYjBjB,EAAc,mCAAG,WAAMG,GAAN,gGAEPS,EAAAA,EAAAA,IAAA,6CACqBT,EADrB,4BAC2CO,EAD3C,oBAFO,cAEpBG,EAFoB,yBAMnBA,EAAKC,KAAKxB,MANS,gCAQ1B0B,QAAQC,IAAR,MAR0B,yDAAH,sDAYdE,EAAiB,mCAAG,WAAMhB,GAAN,gGAEVS,EAAAA,EAAAA,IAAA,6CACqBT,EADrB,4BAC2CO,EAD3C,oBAFU,cAEvBG,EAFuB,yBAMtBA,EAAKC,KAAKC,SANY,gCAQ7BC,QAAQC,IAAR,MAR6B,yDAAH,sDAYjBG,EAAgB,mCAAG,WAAMC,GAAN,gGAETT,EAAAA,EAAAA,IAAA,0DACkCS,EADlC,oBACyDX,EADzD,oBAFS,cAEtBG,EAFsB,yBAMrBA,EAAKC,KAAKC,SANW,gCAQ5BC,QAAQC,IAAR,MAR4B,yDAAH,qD","sources":["components/Cast.jsx","services/api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../services/api';\nimport Loader from '../components/Loader';\nimport NoImage from './no-image.png';\n\nconst MovieCast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // from params\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId);\n  }, [movieId]);\n\n  const getMovieCast = async movieId => {\n    try {\n      setLoading(true);\n      const cast = await fetchMovieCast(movieId);\n      setCast(cast);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <section>\n        {error && !loading && <p>Sorry, try again</p>}\n        {loading && <Loader />}\n        {cast.length > 0 && (\n          <ul>\n            {cast.map(({ id, character, name, profile_path }) => (\n              <li key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                      : NoImage\n                  }\n                  alt={name}\n                />\n                <div>\n                  <p>{name}</p>\n                  <p>Character: {character}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default MovieCast;\n","import axios from 'axios';\n\nconst API_KEY = 'b45b1c12fd7958738751591d9e5171e0';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data.results);\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data);\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data);\n    return resp.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data.results);\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieSearch = async searchQuery => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data.results);\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","cast","setCast","loading","setLoading","error","setError","movieId","useParams","useEffect","getMovieCast","fetchMovieCast","length","map","id","character","name","profile_path","src","NoImage","alt","API_KEY","fetchTrendingMovies","axios","resp","data","results","console","log","fetchMovieDetails","fetchMovieReviews","fetchMovieSearch","searchQuery"],"sourceRoot":""}