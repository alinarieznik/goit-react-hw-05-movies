{"version":3,"file":"static/js/310.4a727b00.chunk.js","mappings":"2JAiBA,IAdmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACpB,OACE,wBACGA,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,SAAC,KAAD,CAAeC,GAAE,kBAAaF,GAA9B,UACE,yBACE,uBAAIC,OAFGD,EADD,KASjB,C,+KCbYG,EAAmBC,EAAAA,GAAAA,KAAH,8KAUhBC,EAAqBD,EAAAA,GAAAA,OAAH,iRAelBE,EAAcF,EAAAA,GAAAA,MAAH,uQ,SCiCxB,EAjDe,WAAO,IAAD,EACnB,GAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,aAAwCC,EAAAA,EAAAA,aAAxC,QAA6D,GAA7D,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAoBF,EAAaG,IAAI,sBAE3CC,EAAAA,EAAAA,YAAU,WACkB,KAAtBF,GACAA,GACFG,EAAgBH,EAEnB,GAAE,CAACA,IAEJ,IASMG,EAAe,mCAAG,WAAMH,GAAN,uFAEpBN,GAAW,GAFS,UAGAU,EAAAA,EAAAA,IAAiBJ,GAHjB,OAGdT,EAHc,OAIpBC,EAASD,GAJW,gDAMpBK,EAAS,EAAD,IANY,yBAQpBF,GAAW,GARS,4EAAH,sDAYrB,OACE,gCACE,UAACR,EAAD,CAAkBmB,SAvBD,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfV,EAAgB,CACdC,kBAAmBQ,EAAKE,SAASV,kBAAkBW,QAErDH,EAAKI,OACN,EAgBG,WACE,SAACvB,EAAD,CAAawB,KAAK,OAAOC,KAAK,uBAC9B,SAAC1B,EAAD,CAAoByB,KAAK,SAAzB,SAAkC,cAEnClB,IAAUF,IAAW,uBAAG,qBACxBA,IAAW,SAACsB,EAAA,EAAD,IACXxB,EAAMyB,OAAS,IAAK,SAACC,EAAA,EAAD,CAAYpC,OAAQU,MAG9C,C,+LCxDK2B,EAAU,mCAEHC,EAAmB,mCAAG,6GAEZC,EAAAA,EAAAA,IAAA,kEAC0CF,EAD1C,oBAFY,cAEzBG,EAFyB,yBAMxBA,EAAKC,KAAKC,SANc,gCAQ/BC,QAAQC,IAAR,MAR+B,yDAAH,qDAYnBC,EAAiB,mCAAG,WAAM3C,GAAN,gGAEVqC,EAAAA,EAAAA,IAAA,6CACqBrC,EADrB,oBACmCmC,EADnC,oBAFU,cAEvBG,EAFuB,yBAMtBA,EAAKC,MANiB,gCAQ7BE,QAAQC,IAAR,MAR6B,yDAAH,sDAYjBE,EAAc,mCAAG,WAAM5C,GAAN,gGAEPqC,EAAAA,EAAAA,IAAA,6CACqBrC,EADrB,4BAC2CmC,EAD3C,oBAFO,cAEpBG,EAFoB,yBAMnBA,EAAKC,KAAKM,MANS,gCAQ1BJ,QAAQC,IAAR,MAR0B,yDAAH,sDAYdI,EAAiB,mCAAG,WAAM9C,GAAN,gGAEVqC,EAAAA,EAAAA,IAAA,6CACqBrC,EADrB,4BAC2CmC,EAD3C,oBAFU,cAEvBG,EAFuB,yBAMtBA,EAAKC,KAAKC,SANY,gCAQ7BC,QAAQC,IAAR,MAR6B,yDAAH,sDAYjBrB,EAAgB,mCAAG,WAAM0B,GAAN,gGAETV,EAAAA,EAAAA,IAAA,0DACkCU,EADlC,oBACyDZ,EADzD,oBAFS,cAEtBG,EAFsB,yBAMrBA,EAAKC,KAAKC,SANW,gCAQ5BC,QAAQC,IAAR,MAR4B,yDAAH,qD","sources":["components/MoviesList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.jsx"],"sourcesContent":["// /movies/:movieId\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(({ id, original_title }) => (\n        <Link key={id} to={`/movies/${id}`}>\n          <li>\n            <p>{original_title}</p>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const StyledSearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 500px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const StyledSearchButton = styled.button`\n  display: inline-block;\n  width: 70px;\n  height: 28px;\n  border: 0;\n  background-color: grey;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: 1px solid grey;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearch } from '../../services/api';\nimport MoviesList from '../../components/MoviesList';\nimport Loader from '../../components/Loader';\nimport {\n  StyledSearchButton,\n  StyledInput,\n  StyledSearchForm,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [movie, setMovie] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams() ?? '';\n\n  const handleQueryChange = searchParams.get('handleQueryChange');\n\n  useEffect(() => {\n    if (handleQueryChange === '') return;\n    if (handleQueryChange) {\n      getSearchMovies(handleQueryChange);\n    }\n  }, [handleQueryChange]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({\n      handleQueryChange: form.elements.handleQueryChange.value,\n    });\n    form.reset();\n  };\n\n  const getSearchMovies = async handleQueryChange => {\n    try {\n      setLoading(true);\n      const movie = await fetchMovieSearch(handleQueryChange);\n      setMovie(movie);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <section>\n      <StyledSearchForm onSubmit={handleSubmit}>\n        <StyledInput type=\"text\" name=\"handleQueryChange\" />\n        <StyledSearchButton type=\"submit\">Search</StyledSearchButton>\n      </StyledSearchForm>\n      {error && !loading && <p>Sorry, try again</p>}\n      {loading && <Loader />}\n      {movie.length > 0 && <MoviesList movies={movie} />}\n    </section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'b45b1c12fd7958738751591d9e5171e0';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data.results);\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data);\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data);\n    return resp.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data.results);\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieSearch = async searchQuery => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data.results);\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movies","map","id","original_title","to","StyledSearchForm","styled","StyledSearchButton","StyledInput","useState","movie","setMovie","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","handleQueryChange","get","useEffect","getSearchMovies","fetchMovieSearch","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","Loader","length","MoviesList","API_KEY","fetchTrendingMovies","axios","resp","data","results","console","log","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReviews","searchQuery"],"sourceRoot":""}