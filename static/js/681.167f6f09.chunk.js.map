{"version":3,"file":"static/js/681.167f6f09.chunk.js","mappings":"kOAkDA,UA7CoB,WAClB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAGQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRC,EAAeH,EAChB,GAAE,CAACA,IAEJ,IAAMG,EAAc,mCAAG,WAAMH,GAAN,uFAEnBH,GAAW,GAFQ,UAGEO,EAAAA,EAAAA,IAAkBJ,GAHpB,OAGbN,EAHa,OAInBC,EAAUD,GAJS,gDAMnBK,EAAS,EAAD,IANW,yBAQnBF,GAAW,GARQ,4EAAH,sDAYpB,OACE,0BACE,+BACGC,IAAUF,IAAW,uBAAG,qBACxBA,IAAW,SAAC,IAAD,IACXF,EAAOW,OAAS,IACf,wBACGX,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,0BAAI,WAASD,MACb,uBAAIC,MAFGF,EADC,OAQdb,EAAOW,SAAU,uBAAG,kDAI7B,C,+LC9CKK,EAAU,mCAEHC,EAAmB,mCAAG,6GAEZC,EAAAA,EAAAA,IAAA,kEAC0CF,EAD1C,oBAFY,cAEzBG,EAFyB,yBAMxBA,EAAKC,KAAKC,SANc,gCAQ/BC,QAAQC,IAAR,MAR+B,yDAAH,qDAYnBC,EAAiB,mCAAG,WAAMX,GAAN,gGAEVK,EAAAA,EAAAA,IAAA,6CACqBL,EADrB,oBACmCG,EADnC,oBAFU,cAEvBG,EAFuB,yBAMtBA,EAAKC,MANiB,gCAQ7BE,QAAQC,IAAR,MAR6B,yDAAH,sDAYjBE,EAAc,mCAAG,WAAMZ,GAAN,gGAEPK,EAAAA,EAAAA,IAAA,6CACqBL,EADrB,4BAC2CG,EAD3C,oBAFO,cAEpBG,EAFoB,yBAMnBA,EAAKC,KAAKM,MANS,gCAQ1BJ,QAAQC,IAAR,MAR0B,yDAAH,sDAYdb,EAAiB,mCAAG,WAAMG,GAAN,gGAEVK,EAAAA,EAAAA,IAAA,6CACqBL,EADrB,4BAC2CG,EAD3C,oBAFU,cAEvBG,EAFuB,yBAMtBA,EAAKC,KAAKC,SANY,gCAQ7BC,QAAQC,IAAR,MAR6B,yDAAH,sDAYjBI,EAAgB,mCAAG,WAAMC,GAAN,gGAETV,EAAAA,EAAAA,IAAA,0DACkCU,EADlC,oBACyDZ,EADzD,oBAFS,cAEtBG,EAFsB,yBAMrBA,EAAKC,KAAKC,SANW,gCAQ5BC,QAAQC,IAAR,MAR4B,yDAAH,qD","sources":["components/Reviews.jsx","services/api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../services/api';\nimport Loader from '../components/Loader';\n\nconst MovieReview = () => {\n  const [review, setReview] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // from params\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReview(movieId);\n  }, [movieId]);\n\n  const getMovieReview = async movieId => {\n    try {\n      setLoading(true);\n      const review = await fetchMovieReviews(movieId);\n      setReview(review);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <section>\n        {error && !loading && <p>Sorry, try again</p>}\n        {loading && <Loader />}\n        {review.length > 0 && (\n          <ul>\n            {review.map(({ id, author, content }) => (\n              <li key={id}>\n                <h4>Author: {author}</h4>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n        {!review.length && <p>We don't have any reviews for this movie.</p>}\n      </section>\n    </div>\n  );\n};\n\nexport default MovieReview;\n","import axios from 'axios';\n\nconst API_KEY = 'b45b1c12fd7958738751591d9e5171e0';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data.results);\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data);\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data);\n    return resp.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data.results);\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieSearch = async searchQuery => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(resp.data.results);\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","review","setReview","loading","setLoading","error","setError","movieId","useParams","useEffect","getMovieReview","fetchMovieReviews","length","map","id","author","content","API_KEY","fetchTrendingMovies","axios","resp","data","results","console","log","fetchMovieDetails","fetchMovieCast","cast","fetchMovieSearch","searchQuery"],"sourceRoot":""}